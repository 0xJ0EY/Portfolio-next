{"version":3,"sources":["node_modules/browser-pack/_prelude.js","emulators.js","src/build.ts","src/dos/bundle/dos-bundle.ts","src/dos/dosbox/ts/direct.ts","src/dos/dosbox/ts/worker.ts","src/emulators.ts","src/http.ts","src/impl/ci-impl.ts","src/impl/emulators-impl.ts","src/impl/modules.ts","src/libzip/libzip.ts","src/protocol/messages-queue.ts","src/protocol/protocol.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","Object","defineProperty","value","Build","version","buildSeed","size","gzSize","_defineProperty","obj","key","arg","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","String","Number","_toPrimitive","_toPropertyKey","enumerable","configurable","writable","__importDefault","mod","__esModule","default","defaultConfig","libzip_1","http_1","build_1","constructor","libzipWasm","this","sources","autoexec","index","dosboxConf","indexOf","_len","arguments","lines","Array","_key","substring","join","extract","url","path","type","extractAll","push","async","overwriteConfig","instantiate","libzip","promises","source","resource","httpRequest","responseType","then","buffer","data","Uint8Array","writeFile","readmeTxt","JSON","stringify","jsdosConf","resources","Promise","all","zipToFs","bundle","zipFromFs","destroy","replace","dosDirect","messages_queue_1","wasmModule","sessionId","messagesQueue","MessagesQueue","handler","bind","name","props","sleepHandler","postMessage","transportLayer","sendMessageToServer","messageHandler","initMessageHandler","newHandler","sendTo","exit","window","removeEventListener","addEventListener","passive","callMain","dosWorker","workerUrl","response","fetch","status","statusText","localUrl","URL","createObjectURL","blob","worker","Worker","onerror","filename","message","onmessage","transfer","revokeObjectURL","terminate","global","NetworkType","emulators_impl_1","emulators","self","options","resolve","reject","Xhr","success","fail","method","makeHttpRequest","progressListner","errorListener","xhr","XMLHttpRequest","open","setRequestHeader","overrideMimeType","evt","total","loaded","progress","onreadystatechange","onReadyStateChange","send","readyState","Math","max","CommandInterfaceEventsImpl","_this","consumer","onStdoutConsumers","next","delayedStdout","fireStdout","onFrameSizeConsumers","onFrameConsumers","onSoundPushConsumers","onExitConsumers","onMessageConsumers","delayedMessages","msgType","args","width","height","rgb","rgba","samples","networkType","address","onNetworkConnectedConsumers","onNetworkDisconnectedConsumers","onNetworkConnected","onNetworkDisconnected","modules_1","dos_bundle_1","direct_1","worker_1","protocol_1","modules","wasmModules","readFile","parse","config","zipAddFile","init","dosboxDirect","dosboxWasm","dosbox","Date","now","backend","pathPrefix","wdosboxJs","dosboxXDirect","dosboxxWasm","dosboxx","wdosboxxJs","ci","CommandInterfaceOverTransportLayer","isArray","err","setTimeout","wasmModulesPromise","WasmModulesImpl","make","dosboxWorker","loadWasmModule","host","globals","compiled","WebAssembly","compile","wmodule","Module","of","wasmSupported","Instance","imul","b","al","bl","fround","x","clz32","trunc","ceil","floor","moduleName","onprogress","emModule","compiledModulePromise","CompiledNodeModule","loadWasmModuleNode","load","fromIndex","lastIndexOf","wIndex","isWasmUrl","wasmUrl","substr","binaryPromise","scriptPromise","binary","script","instantiateWasm","info","receiveInstance","env","instance","eval","CompiledBrowserModule","promise","loadWasmModuleBrowser","libzipPromise","loadModule","dosboxPromise","dosboxxPromise","initialModule","onRuntimeInitialized","home","FS","ignorePermissions","chdirToHome","changedAfterMs","ptr","_zip_from_fs","HEAPU32","archive","HEAPU8","slice","_free","zipArchive","filter","normalizeFilename","pathParts","split","createPath","chdir","withFilter","filterBuffer","filterLength","stringToUTF8","bytes","_malloc","set","retcode","_zip_to_fs","file","body","ArrayBuffer","parts","trim","encoding","exists","lookupPath","_libzip_destroy","RegExp","begin","end","part","archiveLength","archiveBuffer","fileLength","fileBuffer","ret","_zipfile_add","messages","ci_impl_1","transport","ready","TextDecoder","configPromise","configResolve","onServerMessage","sendClientMessage","sendBundles","encoder","TextEncoder","sendData","contents","sendDataChunk","bundleIndex","isView","encode","fileEntry","dosConfig","token","catch","onErr","console","error","finally","panicMessages","onFrameSize","onFrameLines","onExit","onLog","tag","onWarn","onStdout","onPersist","onSoundInit","freq","onSoundPush","onConfig","utf8Decoder","decode","connectResolve","connectPromise","connectReject","eventsImpl","fireNetworkConnected","disconnectResolve","disconnectPromise","fireNetworkDisconnected","onExtractProgress","extracted","count","asyncifyStatsResolve","asyncifyStatsPromise","fsTreeResolve","fsTree","fsTreePromise","chunk","dataChunkKey","dataChunkPromise","dataChunkResolve","mergeChunks","fsGetFileParts","fsGetFileResolve","fsGetFilePromise","log","frameWidth","frameHeight","fireFrameSize","rgbaPtr","line","heapu8","start","fireFrame","fireSoundPush","fireMessage","soundFrequency","screenshot","Uint8ClampedArray","frame","frameOffset","rgbaOffset","ImageData","simulateKeyPress","timeMs","startedAt","keyCodes","forEach","keyCode","addKey","sendKeyEvent","pressed","keyMatrix","sendMouseMotion","y","relative","sendMouseRelativeMotion","sendMouseButton","button","sendMouseSync","sendBackendEvent","payload","json","persist","onlyChanges","persistPromise","persistResolve","pause","resume","mute","unmute","exitPromise","exitResolve","events","fireExit","networkConnect","startsWith","location","protocol","networkDisconnect","asyncifyStats","reader","getReader","result","read","done","byteLength","merged"],"mappings":"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","file":"emulators.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"\n/* eslint-disable */\n// Autogenerated\n// -------------\n// gulpfile.ts/wasm.ts --> generateBuildInfo\n\nexport const Build = {\n    version: \"0.80.21 (e9d788f9b3a77da6b8f029eb31f4c17b)\",\n    buildSeed: 1703230148597,\n    \"wdosbox-x.wasm\": {\n        \"size\": 6527749,\n        \"gzSize\": 0\n    },\n    \"wdosbox-x.js\": {\n        \"size\": 252143,\n        \"gzSize\": 0\n    },\n    \"wdosbox.wasm\": {\n        \"size\": 1465302,\n        \"gzSize\": 0\n    },\n    \"wdosbox.js\": {\n        \"size\": 128379,\n        \"gzSize\": 0\n    },\n    \"wlibzip.wasm\": {\n        \"size\": 111405,\n        \"gzSize\": 0\n    },\n    \"wlibzip.js\": {\n        \"size\": 75391,\n        \"gzSize\": 0\n    }\n,\n};\n","// # DosBundle\n// Is a complete bundle that contains everything needed to start dosbox server\n\nimport LibZip from \"../../libzip/libzip\";\n\nimport { httpRequest } from \"../../http\";\n\nimport { WasmModule } from \"../../impl/modules\";\nimport { Build } from \"../../build\";\n\n// ### DosArchiveSource\nexport interface DosArchiveSource {\n    // source (archive) to download and extract via `extractAll`\n\n    // **url** where archive is located\n    url: string;\n\n    // **path**\n    path: string;\n\n    // **type**\n    type?: \"zip\";\n    // archive type, now only Zip is supported\n}\n\nexport default class DosBundle {\n    public dosboxConf = defaultConfig;\n    public jsdosConf = {\n        version: Build.version,\n    };\n    public sources: DosArchiveSource[];\n\n    private libzipWasm: WasmModule;\n\n    constructor(libzipWasm: WasmModule) {\n        this.sources = [];\n        this.libzipWasm = libzipWasm;\n    }\n\n    autoexec(...lines: string[]): DosBundle {\n        const index = this.dosboxConf.indexOf(\"[autoexec]\");\n        this.dosboxConf = this.dosboxConf.substring(0, index) +\n            \"[autoexec]\\nmount c .\\nc:\\n\" + lines.join(\"\\n\");\n        return this;\n    }\n\n    extract(url: string, path = \"/\", type: \"zip\" = \"zip\"): DosBundle {\n        // simplified version of extractAll, works only for one archive. It calls extractAll inside.\n        return this.extractAll([{ url, path, type }]);\n    }\n\n    extractAll(sources: DosArchiveSource[]): DosBundle {\n        // eslint-disable-next-line max-len\n        // download given [`sources`](https://js-dos.com/6.22/docs/api/generate.html?page=jsdos-bundle#dosfs-dosarchivesource)\n        // and extract them\n        this.sources.push(...sources);\n        return this;\n    }\n\n    async toUint8Array(overwriteConfig = false): Promise<Uint8Array> {\n        const module = {};\n        await this.libzipWasm.instantiate(module);\n        const libzip = new LibZip(module);\n\n        const promises = [];\n        for (const source of this.sources) {\n            if (source.type !== \"zip\") {\n                throw new Error(\"Only Zip is supported\");\n            }\n\n            const resource = httpRequest(source.url, {\n                responseType: \"arraybuffer\",\n            }).then((buffer: string | ArrayBuffer) => {\n                return {\n                    source,\n                    data: new Uint8Array(buffer as ArrayBuffer),\n                };\n            });\n\n            promises.push(resource);\n        }\n\n        if (!overwriteConfig) {\n            await libzip.writeFile(\".jsdos/dosbox.conf\", this.dosboxConf);\n            await libzip.writeFile(\".jsdos/readme.txt\", readmeTxt);\n            await libzip.writeFile(\".jsdos/jsdos.json\", JSON.stringify(this.jsdosConf, null, 2));\n        }\n\n        const resources = await Promise.all(promises);\n        for (const resource of resources) {\n            libzip.zipToFs(resource.data, resource.source.path);\n        }\n\n        if (overwriteConfig) {\n            await libzip.writeFile(\".jsdos/dosbox.conf\", this.dosboxConf);\n            await libzip.writeFile(\".jsdos/readme.txt\", readmeTxt);\n            await libzip.writeFile(\".jsdos/jsdos.json\", JSON.stringify(this.jsdosConf, null, 2));\n        }\n\n        const bundle = await libzip.zipFromFs();\n        libzip.destroy();\n\n        return bundle;\n    }\n}\n\n\nconst readmeTxt = `\nPlease visit our website:\n\n        _                __\n       (_)____      ____/ /___  _____ _________  ____ ___\n      / / ___/_____/ __  / __ \\\\/ ___// ___/ __ \\\\/ __ \\`__ \\\\\n     / (__  )_____/ /_/ / /_/ (__  )/ /__/ /_/ / / / / / /\n  __/ /____/      \\\\__,_/\\\\____/____(_)___/\\\\____/_/ /_/ /_/\n /___/\n`.replace(/\\n/g, \"\\r\\n\");\n\n/* eslint-disable max-len */\nexport const defaultConfig = `[sdl]\nautolock=false\n\nfullscreen=false\nfulldouble=false\nfullresolution=original\nwindowresolution=original\noutput=surface\nsensitivity=100\nwaitonerror=true\npriority=higher,normal\nmapperfile=mapper-jsdos.map\nusescancodes=true\nvsync=false\n[dosbox]\nmachine=svga_s3\n\nlanguage=\ncaptures=capture\nmemsize=16\n[cpu]\ncore=auto\ncputype=auto\ncycles=auto\n\ncycleup=10\ncycledown=20\n[mixer]\nnosound=false\nrate=44100\n\nblocksize=1024\nprebuffer=20\n\n[render]\n# frameskip: How many frames DOSBox skips before drawing one.\n#    aspect: Do aspect correction, if your output method doesn't support scaling this can slow things down!.\n#    scaler: Scaler used to enlarge/enhance low resolution modes.\n#              If 'forced' is appended, then the scaler will be used even if the result might not be desired.\n#            Possible values: none, normal2x, normal3x, advmame2x, advmame3x, advinterp2x, advinterp3x, hq2x, hq3x, 2xsai, super2xsai, supereagle, tv2x, tv3x, rgb2x, rgb3x, scan2x, scan3x.\n\nframeskip=0\naspect=false\nscaler=none\n\n[midi]\n#     mpu401: Type of MPU-401 to emulate.\n#             Possible values: intelligent, uart, none.\n# mididevice: Device that will receive the MIDI data from MPU-401.\n#             Possible values: default, win32, alsa, oss, coreaudio, coremidi, none.\n# midiconfig: Special configuration options for the device driver. This is usually the id of the device you want to use.\n#               See the README/Manual for more details.\n\nmpu401=intelligent\nmididevice=default\nmidiconfig=\n\n[sblaster]\n#  sbtype: Type of Soundblaster to emulate. gb is Gameblaster.\n#          Possible values: sb1, sb2, sbpro1, sbpro2, sb16, gb, none.\n#  sbbase: The IO address of the soundblaster.\n#          Possible values: 220, 240, 260, 280, 2a0, 2c0, 2e0, 300.\n#     irq: The IRQ number of the soundblaster.\n#          Possible values: 7, 5, 3, 9, 10, 11, 12.\n#     dma: The DMA number of the soundblaster.\n#          Possible values: 1, 5, 0, 3, 6, 7.\n#    hdma: The High DMA number of the soundblaster.\n#          Possible values: 1, 5, 0, 3, 6, 7.\n# sbmixer: Allow the soundblaster mixer to modify the DOSBox mixer.\n# oplmode: Type of OPL emulation. On 'auto' the mode is determined by sblaster type. All OPL modes are Adlib-compatible, except for 'cms'.\n#          Possible values: auto, cms, opl2, dualopl2, opl3, none.\n#  oplemu: Provider for the OPL emulation. compat might provide better quality (see oplrate as well).\n#          Possible values: default, compat, fast.\n# oplrate: Sample rate of OPL music emulation. Use 49716 for highest quality (set the mixer rate accordingly).\n#          Possible values: 44100, 49716, 48000, 32000, 22050, 16000, 11025, 8000.\n\nsbtype=sb16\nsbbase=220\nirq=7\ndma=1\nhdma=5\nsbmixer=true\noplmode=auto\noplemu=default\noplrate=44100\n\n[gus]\n#      gus: Enable the Gravis Ultrasound emulation.\n#  gusrate: Sample rate of Ultrasound emulation.\n#           Possible values: 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.\n#  gusbase: The IO base address of the Gravis Ultrasound.\n#           Possible values: 240, 220, 260, 280, 2a0, 2c0, 2e0, 300.\n#   gusirq: The IRQ number of the Gravis Ultrasound.\n#           Possible values: 5, 3, 7, 9, 10, 11, 12.\n#   gusdma: The DMA channel of the Gravis Ultrasound.\n#           Possible values: 3, 0, 1, 5, 6, 7.\n# ultradir: Path to Ultrasound directory. In this directory\n#           there should be a MIDI directory that contains\n#           the patch files for GUS playback. Patch sets used\n#           with Timidity should work fine.\n\ngus=false\ngusrate=44100\ngusbase=240\ngusirq=5\ngusdma=3\nultradir=C:\\\\ULTRASND\n\n[speaker]\n# pcspeaker: Enable PC-Speaker emulation.\n#    pcrate: Sample rate of the PC-Speaker sound generation.\n#            Possible values: 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.\n#     tandy: Enable Tandy Sound System emulation. For 'auto', emulation is present only if machine is set to 'tandy'.\n#            Possible values: auto, on, off.\n# tandyrate: Sample rate of the Tandy 3-Voice generation.\n#            Possible values: 44100, 48000, 32000, 22050, 16000, 11025, 8000, 49716.\n#    disney: Enable Disney Sound Source emulation. (Covox Voice Master and Speech Thing compatible).\n\npcspeaker=true\npcrate=44100\ntandy=auto\ntandyrate=44100\ndisney=true\n\n[joystick]\n# joysticktype: Type of joystick to emulate: auto (default), none,\n#               2axis (supports two joysticks),\n#               4axis (supports one joystick, first joystick used),\n#               4axis_2 (supports one joystick, second joystick used),\n#               fcs (Thrustmaster), ch (CH Flightstick).\n#               none disables joystick emulation.\n#               auto chooses emulation depending on real joystick(s).\n#               (Remember to reset dosbox's mapperfile if you saved it earlier)\n#               Possible values: auto, 2axis, 4axis, 4axis_2, fcs, ch, none.\n#        timed: enable timed intervals for axis. Experiment with this option, if your joystick drifts (away).\n#     autofire: continuously fires as long as you keep the button pressed.\n#       swap34: swap the 3rd and the 4th axis. can be useful for certain joysticks.\n#   buttonwrap: enable button wrapping at the number of emulated buttons.\n\njoysticktype=auto\ntimed=true\nautofire=false\nswap34=false\nbuttonwrap=false\n\n[serial]\n# serial1: set type of device connected to com port.\n#          Can be disabled, dummy, modem, nullmodem, directserial.\n#          Additional parameters must be in the same line in the form of\n#          parameter:value. Parameter for all types is irq (optional).\n#          for directserial: realport (required), rxdelay (optional).\n#                           (realport:COM1 realport:ttyS0).\n#          for modem: listenport (optional).\n#          for nullmodem: server, rxdelay, txdelay, telnet, usedtr,\n#                         transparent, port, inhsocket (all optional).\n#          Example: serial1=modem listenport:5000\n#          Possible values: dummy, disabled, modem, nullmodem, directserial.\n# serial2: see serial1\n#          Possible values: dummy, disabled, modem, nullmodem, directserial.\n# serial3: see serial1\n#          Possible values: dummy, disabled, modem, nullmodem, directserial.\n# serial4: see serial1\n#          Possible values: dummy, disabled, modem, nullmodem, directserial.\n\nserial1=dummy\nserial2=dummy\nserial3=disabled\nserial4=disabled\n\n[dos]\n#            xms: Enable XMS support.\n#            ems: Enable EMS support.\n#            umb: Enable UMB support.\n# keyboardlayout: Language code of the keyboard layout (or none).\n\nxms=true\nems=true\numb=true\nkeyboardlayout=auto\n\n[ipx]\n# ipx: Enable ipx over UDP/IP emulation.\n\nipx=true\n[autoexec]\necho off\nmount c .\nc:\n\ntype jsdos~1/readme.txt\necho on\n\n# Generated using https://js-dos.com\n# █▀▀▀▀▀█ █  ▄▄▄▀▀█ █▀▀▀▀▀█\n# █ ███ █ ██▄ █ ▀ ▄ █ ███ █\n# █ ▀▀▀ █ ▄██ ▀ ▀▀█ █ ▀▀▀ █\n# ▀▀▀▀▀▀▀ ▀ █▄▀▄▀ █ ▀▀▀▀▀▀▀\n# █▀▄▄█▀▀▄▄ ▀ ▀█▄▄▄▄ ▀▄█▀█▀\n# █▀ ▀ ▀▀▄ █▀ ▄ ▄▀▀▀▄ █▀█▄\n# ▄ ▄▄ █▀▀▄ ▄▀▄▀▀█  ▀▀▄▀▀█▀\n#   ▄▀▀█▀▀ █▀█▀█▀▀▄ ▀██▀█▄\n# ▀▀▀ ▀ ▀ █▄█ ▀█▄▄█▀▀▀█▀▀\n# █▀▀▀▀▀█ ▄▄▄ ▄ ▄ █ ▀ █▄▄▄▄\n# █ ███ █ ▀█▀▀▄▀▀▄████▀▀█▄█\n# █ ▀▀▀ █ ▄▀▀█▀█▀▄ ▀▀▄▄█▄█\n# ▀▀▀▀▀▀▀ ▀   ▀▀ ▀  ▀   ▀▀▀\n`.replace(/\\n/g, \"\\r\\n\");\n\n/* eslint-enable max-len */\n","import { WasmModule } from \"../../../impl/modules\";\nimport { TransportLayer, MessageHandler, ClientMessage, ServerMessage } from \"../../../protocol/protocol\";\nimport { MessagesQueue } from \"../../../protocol/messages-queue\";\n\nexport async function dosDirect(wasmModule: WasmModule, sessionId: string): Promise<TransportLayer> {\n    const messagesQueue = new MessagesQueue();\n    let handler: MessageHandler = messagesQueue.handler.bind(messagesQueue);\n\n    const module: any = {};\n\n    module.postMessage = (name: ServerMessage, props: {[key: string]: any}) => {\n        handler(name, props);\n    };\n\n    const sleepHandler = (e: MessageEvent) => {\n        const data = e.data;\n        if (data?.name === \"ws-sync-sleep\" && data.props.sessionId === sessionId) {\n            postMessage({ name: \"wc-sync-sleep\", props: data.props }, \"*\");\n        }\n    };\n\n    const transportLayer: TransportLayer = {\n        sessionId,\n        sendMessageToServer: (name: ClientMessage, props?: {[key: string]: any}) => {\n            module.messageHandler({ data: { name, props } });\n        },\n        initMessageHandler: (newHandler: MessageHandler) => {\n            handler = newHandler;\n            messagesQueue.sendTo(handler);\n        },\n        exit: () => {\n            if (typeof window !== \"undefined\") {\n                window.removeEventListener(\"message\", sleepHandler);\n            }\n        },\n    };\n\n    (transportLayer as any).module = module;\n\n    if (typeof window !== \"undefined\") {\n        window.addEventListener(\"message\", sleepHandler, { passive: true });\n    }\n\n    await wasmModule.instantiate(module);\n    module.callMain([sessionId]);\n\n    return transportLayer;\n}\n","import { WasmModule } from \"../../../impl/modules\";\nimport { TransportLayer, MessageHandler, ClientMessage } from \"../../../protocol/protocol\";\nimport { MessagesQueue } from \"../../../protocol/messages-queue\";\n\nexport async function dosWorker(workerUrl: string,\n                                wasmModule: WasmModule,\n                                sessionId: string): Promise<TransportLayer> {\n    const messagesQueue = new MessagesQueue();\n    let handler: MessageHandler = messagesQueue.handler.bind(messagesQueue);\n\n    const response = await fetch(workerUrl);\n    if (response.status !== 200) {\n        throw new Error(\"Unable to download '\" + workerUrl + \"' (\" +\n            response.status + \"): \" + response.statusText);\n    }\n    const localUrl = URL.createObjectURL(await response.blob());\n    const worker = new Worker(localUrl);\n    worker.onerror = (e) => {\n        handler(\"ws-err\", { type: e.type, filename: e.filename, message: e.message });\n    };\n    worker.onmessage = (e) => {\n        const data = e.data;\n        if (data?.name !== undefined) {\n            handler(data.name, data.props);\n        }\n    };\n\n    await wasmModule.instantiate({});\n\n    const transportLayer: TransportLayer = {\n        sessionId,\n        sendMessageToServer: (name: ClientMessage,\n            props: {[key: string]: any},\n            transfer?: ArrayBuffer[]) => {\n            if (transfer) {\n                worker.postMessage({ name, props }, transfer);\n            } else {\n                worker.postMessage({ name, props });\n            }\n        },\n        initMessageHandler: (newHandler: MessageHandler) => {\n            handler = newHandler;\n            messagesQueue.sendTo(handler);\n        },\n        exit: () => {\n            URL.revokeObjectURL(localUrl);\n            worker.terminate();\n        },\n    };\n\n    try {\n        transportLayer.sendMessageToServer(\"wc-install\", {\n            module: (wasmModule as any).wasmModule,\n            sessionId,\n        });\n    } catch (e) {\n        transportLayer.sendMessageToServer(\"wc-install\", { sessionId });\n    }\n\n    return transportLayer;\n}\n","import DosBundle from \"./dos/bundle/dos-bundle\";\nimport emulatorsImpl from \"./impl/emulators-impl\";\n\nimport { AsyncifyStats, TransportLayer, FsNode } from \"./protocol/protocol\";\n\nexport interface DosConfig {\n    dosboxConf: string,\n    jsdosConf: {\n        version: string,\n    },\n};\n\n/* eslint-disable no-unused-vars */\nexport enum NetworkType {\n    NETWORK_DOSBOX_IPX = 0,\n}\n/* eslint-enable no-unused-vars */\n\nexport interface BackendOptions {\n    token?: string | undefined;\n    onExtractProgress?: (bundleIndex: number, file: string, extracted: number, total: number) => void;\n}\n\nexport type InitBundleEntry = Uint8Array;\nexport interface InitFileEntry {\n    path: string,\n    contents: Uint8Array,\n};\nexport type InitFsEntry = InitBundleEntry | InitFileEntry | DosConfig | string;\nexport type InitFs = InitFsEntry | InitFsEntry[];\n\nexport interface Emulators {\n    // * pathPrefix - by default emulators will load wasm modules relatively from current path,\n    // you should specify path prefix if you want to load them from different place\n    pathPrefix: string;\n\n    // * version - version of emulators build\n    version: string;\n\n    // * wdosboxJs - a file name to load\n    wdosboxJs: string;\n\n    // * dosBundle - create empty DosBundle\n    bundle: () => Promise<DosBundle>;\n\n    // * dosConfig - read bundle config\n    bundleConfig: (bundle: InitBundleEntry) => Promise<DosConfig | null>;\n\n    // * updateDosConfig - update bunle config\n    bundleUpdateConfig: (bundle: InitBundleEntry, config: DosConfig) => Promise<Uint8Array>;\n\n    // * dosboxNode - create dosbox node emulator backend\n    dosboxNode: (init: InitFs, options?: BackendOptions) => Promise<CommandInterface>;\n\n    // * dosboxDirect - create dosbox direct emulator backend\n    dosboxDirect: (init: InitFs, options?: BackendOptions) => Promise<CommandInterface>;\n\n    // * dosboxWorker - create dosbox worker emulator backend\n    dosboxWorker: (init: InitFs, options?: BackendOptions) => Promise<CommandInterface>;\n\n    // * dosboxXNode - create dosbox-x node emulator backend\n    dosboxXNode: (init: InitFs, options?: BackendOptions) => Promise<CommandInterface>;\n\n    // * dosboxDirect - create dosbox-x direct emulator backend\n    dosboxXDirect: (init: InitFs, options?: BackendOptions) => Promise<CommandInterface>;\n\n    // * dosboxWorker - create dosbox-x worker emulator backend\n    dosboxXWorker: (init: InitFs, options?: BackendOptions) => Promise<CommandInterface>;\n\n    // * backend - create abstract emulation backend by given TransportLayer\n    backend: (init: InitFs, transportLayer: TransportLayer,\n        options?: BackendOptions) => Promise<CommandInterface>;\n}\n\nexport interface CommandInterface {\n    // * get bundle config\n    config: () => Promise<DosConfig>;\n\n    // * current render buffer width\n    height: () => number;\n\n    // * current render buffer height\n    width: () => number;\n\n    // * sound frequency\n    soundFrequency: () => number;\n\n    // * `screenshot()` - get screnshot of canvas as ImageData\n    screenshot: () => Promise<ImageData>;\n\n    // * `pause()` - pause emulation (also mute all sounds)\n    pause: () => void;\n\n    // * `resume()` - resume emulation (also unmute all sounds)\n    resume: () => void;\n\n    // * `mute()` - mute all sounds\n    mute: () => void;\n\n    // * `unmute()` - unmute all sounds\n    unmute: () => void;\n\n    // * `exit()` - exit from runtime\n    exit: () => Promise<void>;\n\n    // * `simulateKeyPress(...keyCodes)` - allows to simulate key press **AND** release event for key code\n    // see `sendKeyPress` to find meaning of keyCode. Key combination is supported when more than 1 keyCode is set.\n    simulateKeyPress: (...keyCodes: number[]) => void;\n\n    // * `sendKeyEvent(keyCode, pressed)` - sends single key (press or release) event to backend\n    sendKeyEvent: (keyCode: number, pressed: boolean) => void;\n\n    // * `sendMouseMotion` - sends mouse motion event to backend, position is in range [0, 1]\n    sendMouseMotion: (x: number, y: number) => void;\n\n    // * `sendRelativeMotion` - sends mouse motion event to backend, position is absolute diff of position\n    sendMouseRelativeMotion: (x: number, y: number) => void;\n\n    // * `simulateMouseButton` - sends mouse button event (press or release) to backend\n    sendMouseButton: (button: number, pressed: boolean) => void;\n\n    // * `sendMouseSync` - sends mouse sync event\n    sendMouseSync: () => void;\n\n    // * `sendBackendEvent` - send event for current backend, event will be stringified to json\n    sendBackendEvent: (event: any) => void;\n\n    // dump FS as Uint8Array <zip archive>\n    persist(onlyChanges?: boolean): Promise<Uint8Array | null>;\n\n    // events\n    events(): CommandInterfaceEvents;\n\n    networkConnect(networkType: NetworkType, address: string): Promise<void>;\n\n    networkDisconnect(networkType: NetworkType): Promise<void>;\n\n    asyncifyStats(): Promise<AsyncifyStats>;\n\n    fsTree(): Promise<FsNode>;\n\n    fsReadFile(file: string): Promise<Uint8Array>;\n\n    fsWriteFile(file: string, contents: ReadableStream<Uint8Array> | Uint8Array): Promise<void>;\n\n    fsDeleteFile(file: string): Promise<void>;\n\n}\n\nexport type MessageType = \"log\" | \"warn\" | \"error\" | string;\n\nexport interface CommandInterfaceEvents {\n    onStdout: (consumer: (message: string) => void) => void;\n    onFrameSize: (consumer: (width: number, height: number) => void) => void;\n    onFrame: (consumer: (rgb: Uint8Array | null, rgba: Uint8Array | null) => void) => void;\n    onSoundPush: (consumer: (samples: Float32Array) => void) => void;\n    onExit: (consumer: () => void) => void;\n\n    onMessage: (consumer: (msgType: MessageType, ...args: any[]) => void) => void;\n\n    onNetworkConnected: (consumer: (networkType: NetworkType, address: string) => void) => void;\n    onNetworkDisconnected: (consumer: (networkType: NetworkType) => void) => void;\n}\n\nif (typeof window !== \"undefined\") {\n    (window as any).emulators = emulatorsImpl;\n} if (typeof global !== \"undefined\") {\n    (global as any).emulators = emulatorsImpl;\n}\n","export interface XhrOptions {\n    method?: string;\n    progress?: (total: number, loaded: number) => void;\n    data?: string;\n    responseType?: XMLHttpRequestResponseType;\n}\n\nexport const httpRequest = XhrRequest;\n\n// # XhrRequest\n// `XhrRequest` is small wrapper over XMLHttpRequest, that provides some\n// handy methods\nfunction XhrRequest(url: string, options: XhrOptions): Promise<string | ArrayBuffer> {\n    return new Promise<string | ArrayBuffer>((resolve, reject) => {\n        new Xhr(url, {\n            ...options,\n            success: resolve,\n            fail: (message: string) => {\n                reject(new Error(message));\n            },\n        });\n    });\n}\n\n// private implementation\ninterface XhrOptionsInternal extends XhrOptions {\n    success?: (response: any) => void;\n    fail?: (message: string) => void;\n}\n// * `success` - callback when resource is downloaded\n// * `fail` - fail callback\n\n\n// Class Xhr does not have any public methods\nclass Xhr {\n    private resource: string;\n    private options: XhrOptionsInternal;\n    private xhr: XMLHttpRequest | null = null;\n    private total = 0;\n    private loaded = 0;\n\n    constructor(url: string, options: XhrOptionsInternal) {\n        this.resource = url;\n        this.options = options;\n        this.options.method = options.method || \"GET\";\n\n        if (this.options.method !== \"GET\") {\n            throw new Error(\"Method \" + this.options.method + \" is not supported\");\n        }\n\n        this.makeHttpRequest();\n    }\n\n    private makeHttpRequest() {\n        this.xhr = new XMLHttpRequest();\n        this.xhr.open(this.options.method || \"GET\", this.resource, true);\n        if (this.options.method === \"POST\") {\n            this.xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        this.xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n\n        let progressListner;\n        if (typeof (progressListner = this.xhr).addEventListener === \"function\") {\n            progressListner.addEventListener(\"progress\", (evt) => {\n                this.total = evt.total;\n                this.loaded = evt.loaded;\n                if (this.options.progress) {\n                    return this.options.progress(evt.total, evt.loaded);\n                }\n            });\n        }\n\n        let errorListener;\n        if (typeof (errorListener = this.xhr).addEventListener === \"function\") {\n            errorListener.addEventListener(\"error\", () => {\n                if (this.options.fail) {\n                    this.options.fail(\"Unalbe to download '\" + this.resource +\n                        \"', code: \" + (this.xhr as XMLHttpRequest).status);\n                    return delete this.options.fail;\n                }\n            });\n        }\n        this.xhr.onreadystatechange = () => {\n            return this.onReadyStateChange();\n        };\n        if (this.options.responseType) {\n            this.xhr.responseType = this.options.responseType;\n        }\n        this.xhr.send(this.options.data);\n    }\n\n    private onReadyStateChange() {\n        const xhr = (this.xhr as XMLHttpRequest);\n        if (xhr.readyState === 4) {\n            if (xhr.status === 200) {\n                if (this.options.success) {\n                    const total = Math.max(this.total, this.loaded);\n                    if (this.options.progress !== undefined) {\n                        this.options.progress(total, total);\n                    }\n\n                    return this.options.success(xhr.response);\n                }\n            } else if (this.options.fail) {\n                this.options.fail(\"Unable to download '\" + this.resource + \"', code: \" + xhr.status);\n                return delete this.options.fail;\n            }\n        }\n    }\n}\n\n","/* eslint-disable no-invalid-this */\n\nimport { CommandInterfaceEvents, MessageType, NetworkType } from \"../emulators\";\n\nexport class CommandInterfaceEventsImpl implements CommandInterfaceEvents {\n    private onStdoutConsumers: ((message: string) => void)[] = [];\n    private delayedStdout: string[] = [];\n\n    private onFrameSizeConsumers: ((width: number, height: number) => void)[] = [];\n    private onFrameConsumers: ((rgb: Uint8Array | null, rgba: Uint8Array | null) => void)[] = [];\n    private onSoundPushConsumers: ((samples: Float32Array) => void)[] = [];\n    private onExitConsumers: (() => void)[] = [];\n\n    private onMessageConsumers: ((msgType: MessageType, ...args: any[]) => void)[] = [];\n    private delayedMessages: {msgType: MessageType, args: any[]}[] = [];\n\n    private onNetworkConnectedConsumers: ((networkType: NetworkType, address: string) => void)[] = [];\n    private onNetworkDisconnectedConsumers: ((networkType: NetworkType) => void)[] = [];\n\n    onStdout = (consumer: (message: string) => void) => {\n        this.onStdoutConsumers.push(consumer);\n\n        if (this.onStdoutConsumers.length === 1) {\n            for (const next of this.delayedStdout) {\n                this.fireStdout(next);\n            }\n            this.delayedStdout = [];\n        }\n    };\n\n    onFrameSize = (consumer: (width: number, height: number) => void) => {\n        this.onFrameSizeConsumers.push(consumer);\n    };\n\n    onFrame = (consumer: (rgb: Uint8Array | null, rgba: Uint8Array | null) => void) => {\n        this.onFrameConsumers.push(consumer);\n    };\n\n    onSoundPush = (consumer: (samples: Float32Array) => void) => {\n        this.onSoundPushConsumers.push(consumer);\n    };\n\n    onExit = (consumer: () => void) => {\n        this.onExitConsumers.push(consumer);\n    };\n\n    onMessage = (consumer: (msgType: MessageType, ...args: any[]) => void) => {\n        this.onMessageConsumers.push(consumer);\n\n        if (this.onMessageConsumers.length === 1) {\n            for (const next of this.delayedMessages) {\n                consumer(next.msgType, ...next.args);\n            }\n            this.delayedMessages = [];\n        }\n    };\n\n    onNetworkConnected(consumer: (networkType: NetworkType, address: string) => void) {\n        this.onNetworkConnectedConsumers.push(consumer);\n    }\n\n    onNetworkDisconnected(consumer: (networkType: NetworkType) => void) {\n        this.onNetworkDisconnectedConsumers.push(consumer);\n    }\n\n    fireStdout = (message: string) => {\n        if (this.onStdoutConsumers.length === 0) {\n            this.delayedStdout.push(message);\n            return;\n        }\n\n        for (const next of this.onStdoutConsumers) {\n            next(message);\n        }\n    };\n\n    fireFrameSize = (width: number, height: number) => {\n        for (const next of this.onFrameSizeConsumers) {\n            next(width, height);\n        }\n    };\n\n    fireFrame = (rgb: Uint8Array | null, rgba: Uint8Array | null) => {\n        for (const next of this.onFrameConsumers) {\n            next(rgb, rgba);\n        }\n    };\n\n    fireSoundPush = (samples: Float32Array) => {\n        for (const next of this.onSoundPushConsumers) {\n            next(samples);\n        }\n    };\n\n    fireExit = () => {\n        for (const next of this.onExitConsumers) {\n            next();\n        }\n\n        this.onStdoutConsumers = [];\n        this.onFrameSizeConsumers = [];\n        this.onFrameConsumers = [];\n        this.onSoundPushConsumers = [];\n        this.onExitConsumers = [];\n        this.onMessageConsumers = [];\n    };\n\n    fireMessage = (msgType: MessageType, ...args: any[]) => {\n        if (this.onMessageConsumers.length === 0) {\n            this.delayedMessages.push({ msgType, args });\n            return;\n        }\n\n        for (const next of this.onMessageConsumers) {\n            next(msgType, ...args);\n        }\n    };\n\n    fireNetworkConnected = (networkType: NetworkType, address: string) => {\n        for (const next of this.onNetworkConnectedConsumers) {\n            next(networkType, address);\n        }\n    };\n\n    fireNetworkDisconnected = (networkType: NetworkType) => {\n        for (const next of this.onNetworkDisconnectedConsumers) {\n            next(networkType);\n        }\n    };\n}\n","import { Build } from \"../build\";\nimport { Emulators, CommandInterface, BackendOptions, DosConfig, InitFs, InitBundleEntry } from \"../emulators\";\n\nimport { IWasmModules, WasmModulesImpl } from \"./modules\";\n\nimport DosBundle from \"../dos/bundle/dos-bundle\";\nimport { dosDirect } from \"../dos/dosbox/ts/direct\";\nimport { dosWorker } from \"../dos/dosbox/ts/worker\";\n\nimport { TransportLayer, CommandInterfaceOverTransportLayer } from \"../protocol/protocol\";\nimport LibZip from \"../libzip/libzip\";\n\nclass EmulatorsImpl implements Emulators {\n    pathPrefix = \"\";\n    version = Build.version;\n    wdosboxJs = \"wdosbox.js\";\n    wdosboxxJs = \"wdosbox-x.js\";\n\n    private wasmModulesPromise?: Promise<IWasmModules>;\n\n    async bundle(): Promise<DosBundle> {\n        const modules = await this.wasmModules();\n        const libzipWasm = await modules.libzip();\n        return new DosBundle(libzipWasm);\n    }\n\n    async bundleConfig(bundle: InitBundleEntry): Promise<DosConfig | null> {\n        const modules = await this.wasmModules();\n        const libzipWasm = await modules.libzip();\n\n        const module = {};\n        await libzipWasm.instantiate(module);\n        const libzip = new LibZip(module);\n\n        try {\n            libzip.zipToFs(bundle, \"/\", \".jsdos/\");\n            try {\n                const dosboxConf = (await libzip.readFile(\".jsdos/dosbox.conf\")) as string;\n                try {\n                    const jsdosConf = (await libzip.readFile(\".jsdos/jsdos.json\")) as string;\n                    return {\n                        dosboxConf,\n                        jsdosConf: JSON.parse(jsdosConf),\n                    };\n                } catch (e) {\n                    // ignore\n                }\n                return {\n                    dosboxConf,\n                    jsdosConf: {\n                        version: Build.version,\n                    },\n                };\n            } catch (e) {\n                // ignore\n            }\n            return null;\n        } finally {\n            libzip.destroy();\n        }\n    }\n\n    async bundleUpdateConfig(bundle: InitBundleEntry, config: DosConfig): Promise<Uint8Array> {\n        const modules = await this.wasmModules();\n        const libzipWasm = await modules.libzip();\n\n        const module = {};\n        await libzipWasm.instantiate(module);\n        const libzip = new LibZip(module);\n\n        try {\n            await libzip.writeFile(\"bundle.zip\", bundle);\n            await libzip.writeFile(\".jsdos/dosbox.conf\", config.dosboxConf);\n            await libzip.writeFile(\".jsdos/jsdos.json\", JSON.stringify(config.jsdosConf));\n            await libzip.zipAddFile(\"bundle.zip\", \".jsdos/jsdos.json\");\n            await libzip.zipAddFile(\"bundle.zip\", \".jsdos/dosbox.conf\");\n            return (await libzip.readFile(\"bundle.zip\", \"binary\")) as Uint8Array;\n        } finally {\n            libzip.destroy();\n        }\n    }\n\n    async dosboxNode(init: InitFs, options?: BackendOptions): Promise<CommandInterface> {\n        return this.dosboxDirect(init, options);\n    }\n\n    async dosboxDirect(init: InitFs, options?: BackendOptions): Promise<CommandInterface> {\n        const modules = await this.wasmModules();\n        const dosboxWasm = await modules.dosbox();\n        const transportLayer = await dosDirect(dosboxWasm, \"session-\" + Date.now());\n        return this.backend(init, transportLayer, options);\n    }\n\n    async dosboxWorker(init: InitFs, options?: BackendOptions): Promise<CommandInterface> {\n        const modules = await this.wasmModules();\n        const dosboxWasm = await modules.dosbox();\n        const transportLayer = await dosWorker(this.pathPrefix + this.wdosboxJs, dosboxWasm, \"session-\" + Date.now());\n        return this.backend(init, transportLayer, options);\n    }\n\n    async dosboxXNode(init: InitFs, options?: BackendOptions): Promise<CommandInterface> {\n        return this.dosboxXDirect(init, options);\n    }\n\n    async dosboxXDirect(init: InitFs, options?: BackendOptions): Promise<CommandInterface> {\n        const modules = await this.wasmModules();\n        const dosboxxWasm = await modules.dosboxx();\n        const transportLayer = await dosDirect(dosboxxWasm, \"session-\" + Date.now());\n        return this.backend(init, transportLayer, options);\n    }\n\n    async dosboxXWorker(init: InitFs, options?: BackendOptions): Promise<CommandInterface> {\n        const modules = await this.wasmModules();\n        const dosboxxWasm = await modules.dosboxx();\n        const transportLayer = await dosWorker(this.pathPrefix + this.wdosboxxJs, dosboxxWasm, \"session-\" + Date.now());\n        return this.backend(init, transportLayer, options);\n    }\n\n    async backend(init: InitFs, transportLayer: TransportLayer,\n        options?: BackendOptions): Promise<CommandInterface> {\n        return new Promise<CommandInterface>((resolve, reject) => {\n            const ci = new CommandInterfaceOverTransportLayer(\n                Array.isArray(init) ? init : [init],\n                transportLayer,\n                (err) => {\n                    if (err !== null) {\n                        reject(err);\n                    } else {\n                        // can be called from ctor, without timeout can be undefined\n                        setTimeout(() => resolve(ci), 4);\n                    }\n                },\n                options || {},\n            );\n        });\n    }\n\n    wasmModules(): Promise<IWasmModules> {\n        if (this.wasmModulesPromise !== undefined) {\n            return this.wasmModulesPromise;\n        }\n\n        const make = async () => {\n            return new WasmModulesImpl(this.pathPrefix, this.wdosboxJs, this.wdosboxxJs);\n        };\n\n        this.wasmModulesPromise = make();\n        return this.wasmModulesPromise;\n    }\n\n    async dosDirect(init: InitFs): Promise<CommandInterface> {\n        return this.dosboxDirect(init);\n    }\n\n    async dosWorker(init: InitFs): Promise<CommandInterface> {\n        return this.dosboxWorker(init);\n    }\n}\n\nconst emulators = new EmulatorsImpl();\n\nexport default emulators;\n","import { httpRequest } from \"../http\";\n\nexport interface WasmModule {\n    instantiate: (module?: any) => Promise<any>;\n}\n\nexport interface IWasmModules {\n    libzip: () => Promise<WasmModule>;\n    dosbox: () => Promise<WasmModule>;\n    dosboxx: () => Promise<WasmModule>;\n}\n\ninterface Globals {\n    exports: {[moduleName: string]: any},\n    compiled: {[moduleName: string]: Promise<WasmModule>},\n}\n\nclass Host {\n    public wasmSupported = false;\n    public globals: Globals;\n    constructor() {\n        this.globals = typeof window === \"undefined\" ? {} : window as any;\n        if (!this.globals.exports) {\n            this.globals.exports = {};\n        }\n        if (!this.globals.compiled) {\n            this.globals.compiled = {};\n        }\n\n        // ### WebAssembly\n        // Host able to detect is WebAssembly supported or not,\n        // this information is stored in `Host.wasmSupported` variable\n        if (typeof WebAssembly === \"object\" &&\n            typeof WebAssembly.instantiate === \"function\" &&\n            typeof WebAssembly.compile === \"function\") {\n            const wmodule = new WebAssembly.Module(Uint8Array.of(0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00));\n            if (wmodule instanceof WebAssembly.Module) {\n                this.wasmSupported = new WebAssembly.Instance(wmodule) instanceof WebAssembly.Instance;\n            }\n        }\n\n        // Polyfill for old contains implementations for:\n        // `Math.imul`, `Math.fround`, `Math.clz32`, `Math.trunc`\n        (function polyfill() {\n            if (!Math.imul || Math.imul(0xffffffff, 5) !== -5) {\n                Math.imul = function imul(a: any, b: any) {\n                    const ah = a >>> 16;\n                    const al = a & 0xffff;\n                    const bh = b >>> 16;\n                    const bl = b & 0xffff;\n                    return (al * bl + ((ah * bl + al * bh) << 16)) | 0;\n                };\n            }\n            Math.imul = Math.imul;\n\n            if (!Math.fround) {\n                Math.fround = function(x) {\n                    return x;\n                };\n            }\n            Math.fround = Math.fround;\n\n            if (!Math.clz32) {\n                Math.clz32 = function(x) {\n                    x = x >>> 0;\n                    for (let i = 0; i < 32; i++) {\n                        if (x & (1 << (31 - i))) {\n                            return i;\n                        }\n                    }\n                    return 32;\n                };\n            }\n            Math.clz32 = Math.clz32;\n\n            if (!Math.trunc) {\n                Math.trunc = function(x) {\n                    return x < 0 ? Math.ceil(x) : Math.floor(x);\n                };\n            }\n            Math.trunc = Math.trunc;\n        })();\n    }\n}\n\nexport const host = new Host();\n\nexport class WasmModulesImpl implements IWasmModules {\n    private pathPrefix: string;\n    private wdosboxJs: string;\n    private wdosboxxJs: string;\n\n    private libzipPromise?: Promise<WasmModule>;\n    private dosboxPromise?: Promise<WasmModule>;\n    private dosboxxPromise?: Promise<WasmModule>;\n\n    public wasmSupported = false;\n\n    constructor(pathPrefix: string,\n        wdosboxJs: string,\n        wdosboxxJs: string) {\n        if (pathPrefix.length > 0 && pathPrefix[pathPrefix.length - 1] !== \"/\") {\n            pathPrefix += \"/\";\n        }\n\n        this.pathPrefix = pathPrefix;\n        this.wdosboxJs = wdosboxJs;\n        this.wdosboxxJs = wdosboxxJs;\n    }\n\n    libzip() {\n        if (this.libzipPromise !== undefined) {\n            return this.libzipPromise;\n        }\n\n        this.libzipPromise = this.loadModule(this.pathPrefix + \"wlibzip.js\", \"WLIBZIP\");\n        return this.libzipPromise;\n    }\n\n    dosbox() {\n        if (this.dosboxPromise !== undefined) {\n            return this.dosboxPromise;\n        }\n\n        this.dosboxPromise = this.loadModule(this.pathPrefix + this.wdosboxJs, \"WDOSBOX\");\n\n        return this.dosboxPromise;\n    }\n\n    dosboxx() {\n        if (this.dosboxxPromise !== undefined) {\n            return this.dosboxxPromise;\n        }\n\n        this.dosboxxPromise = this.loadModule(this.pathPrefix + this.wdosboxxJs, \"WDOSBOXX\");\n\n        return this.dosboxxPromise;\n    }\n\n    private loadModule(url: string,\n        moduleName: string) {\n        // eslint-disable-next-line\n        return loadWasmModule(url, moduleName, () => {});\n    }\n}\n\nexport function loadWasmModule(url: string,\n                               moduleName: string,\n                               onprogress: (stage: string, total: number, loaded: number) => void,\n): Promise<WasmModule> {\n    if (typeof XMLHttpRequest === \"undefined\") {\n        return loadWasmModuleNode(url, moduleName, onprogress);\n    } else {\n        return loadWasmModuleBrowser(url, moduleName, onprogress);\n    }\n}\n\nfunction loadWasmModuleNode(url: string,\n                            moduleName: string,\n                            // eslint-disable-next-line\n                            onprogress: (stage: string, total: number, loaded: number) => void) {\n    if (host.globals.compiled[moduleName] !== undefined) {\n        return host.globals.compiled[moduleName];\n    }\n\n    const emModule = require(url);\n    const compiledModulePromise = Promise.resolve(new CompiledNodeModule(emModule));\n    if (moduleName) {\n        host.globals.compiled[moduleName] = compiledModulePromise;\n    }\n\n    return compiledModulePromise;\n}\n\nfunction loadWasmModuleBrowser(url: string,\n                               moduleName: string,\n                               onprogress: (stage: string, total: number, loaded: number) => void) {\n    if (host.globals.compiled[moduleName] !== undefined) {\n        return host.globals.compiled[moduleName];\n    }\n\n    async function load() {\n        const fromIndex = url.lastIndexOf(\"/\");\n        const wIndex = url.indexOf(\"w\", fromIndex);\n        const isWasmUrl = wIndex === fromIndex + 1 && wIndex >= 0;\n\n        if (!host.wasmSupported || !isWasmUrl) {\n            throw new Error(\"Starting from js-dos 6.22.60 js environment is not supported\");\n        }\n\n        const wasmUrl = url.substr(0, url.lastIndexOf(\".js\")) + \".wasm\";\n        const binaryPromise = httpRequest(wasmUrl, {\n            responseType: \"arraybuffer\",\n            progress: (total, loaded) => {\n                onprogress(\"Resolving DosBox (\" + url + \")\", total, loaded);\n            },\n        });\n        const scriptPromise = httpRequest(url, {\n            progress: (total, loaded) => {\n                onprogress(\"Resolving DosBox\", total, loaded);\n            },\n        });\n\n        const [binary, script] = await Promise.all([binaryPromise, scriptPromise]);\n        const wasmModule = await WebAssembly.compile(binary as ArrayBuffer);\n        const instantiateWasm = (info: any, receiveInstance: any) => {\n            info.env = info.env || {};\n            WebAssembly.instantiate(wasmModule, info)\n                .then((instance) => receiveInstance(instance, wasmModule));\n            return; // no-return\n        };\n\n        eval.call(window, script as string);\n\n        return new CompiledBrowserModule(wasmModule,\n            host.globals.exports[moduleName],\n            instantiateWasm);\n    }\n\n    const promise = load();\n\n    if (moduleName) {\n        host.globals.compiled[moduleName] = promise;\n    }\n\n    return promise;\n}\n\nclass CompiledNodeModule implements WasmModule {\n    private emModule: any;\n    constructor(emModule: any) {\n        this.emModule = emModule;\n    }\n\n    instantiate(initialModule: any): Promise<void> {\n        return new Promise<void>((resolve) => {\n            initialModule.onRuntimeInitialized = () => {\n                resolve();\n            };\n\n            // eslint-disable-next-line new-cap\n            new this.emModule(initialModule);\n        });\n    }\n}\n\nclass CompiledBrowserModule implements WasmModule {\n    public wasmModule: WebAssembly.Module;\n    private module: any;\n    private instantiateWasm: any;\n\n    constructor(wasmModule: WebAssembly.Module, module: any, instantiateWasm: any) {\n        this.wasmModule = wasmModule;\n        this.module = module;\n        this.instantiateWasm = instantiateWasm;\n    }\n\n    instantiate(initialModule: any): Promise<void> {\n        return new Promise<void>((resolve) => {\n            initialModule.instantiateWasm = this.instantiateWasm;\n            initialModule.onRuntimeInitialized = () => {\n                resolve();\n            };\n            // eslint-disable-next-line new-cap\n            new this.module(initialModule);\n        });\n    }\n}\n","export default class LibZip {\n    public module: any;\n    private home: string;\n\n    constructor(module: any, home: string = \"/home/web_user\") {\n        this.module = module;\n        this.home = home;\n        this.module.callMain([]);\n        this.module.FS.ignorePermissions = true;\n        this.chdirToHome();\n    }\n\n    zipFromFs(changedAfterMs = -1): Promise<Uint8Array> {\n        this.chdirToHome();\n\n        const ptr = this.module._zip_from_fs(changedAfterMs);\n        if (ptr === 0) {\n            return Promise.reject(new Error(\"Can't create zip, see more info in logs\"));\n        }\n\n        const length = this.module.HEAPU32[ptr / 4];\n        const memory: Uint8Array = this.module.HEAPU8;\n        const archive = memory.slice(ptr + 4, ptr + 4 + length);\n        this.module._free(ptr);\n        return Promise.resolve(archive);\n    }\n\n    zipToFs(zipArchive: Uint8Array, path = \"/\", filter?: string): Promise<void> {\n        const Module = this.module;\n\n        path = this.normalizeFilename(path);\n        const pathParts = this.normalizeFilename(path).split(\"/\");\n        this.createPath(pathParts, 0, pathParts.length);\n        this.chdir(path);\n\n        const withFilter = filter !== undefined && filter.length > 0;\n        let filterBuffer = 0;\n        if (withFilter) {\n            const filterLength = Module[\"lengthBytesUTF8\"](filter) + 1;\n            filterBuffer = Module[\"_malloc\"](filterLength);\n            Module.stringToUTF8(filter, filterBuffer, filterLength);\n        }\n\n        const bytes = new Uint8Array(zipArchive);\n        const buffer = Module._malloc(bytes.length);\n        Module.HEAPU8.set(bytes, buffer);\n        const retcode = Module._zip_to_fs(buffer, bytes.length, filterBuffer);\n        Module._free(buffer);\n\n        this.chdirToHome();\n\n        if (withFilter) {\n            Module._free(filterBuffer);\n        }\n\n        if (retcode === 0) {\n            return Promise.resolve();\n        } else {\n            return Promise.reject(new Error(\"Can't extract zip, retcode \" +\n                retcode + \", see more info in logs\"));\n        }\n    }\n\n    // ### writeFile\n    writeFile(file: string, body: ArrayBuffer | Uint8Array | string) {\n        // Allow to create file in FS, it will be created relatively cwd\n        // All directories will be created\n        //\n        // windows style path are also valid, but **drive letter is ignored**\n        // if you pass only filename, then file will be writed in cwd\n        //\n        // body can be string or ArrayBuffer or Uint8Array\n        file = this.normalizeFilename(file);\n\n        if (body instanceof ArrayBuffer) {\n            body = new Uint8Array(body);\n        }\n\n        const parts = file.split(\"/\");\n\n        if (parts.length === 0) {\n            throw new Error(\"Can't create file '\" + file + \"', because it's not valid file path\");\n        }\n\n        const filename = parts[parts.length - 1].trim();\n\n        if (filename.length === 0) {\n            throw new Error(\"Can't create file '\" + file + \"', because file name is empty\");\n        }\n\n        /* i < parts.length - 1, because last part is file name */\n        const path = this.createPath(parts, 0, parts.length - 1);\n        this.module.FS.writeFile(path + \"/\" + filename, body);\n    }\n\n    async readFile(file: string, encoding: \"binary\" | \"utf8\" = \"utf8\"): Promise<string | Uint8Array> {\n        file = this.normalizeFilename(file);\n        return this.module.FS.readFile(file, { encoding });\n    }\n\n    exists(file: string): boolean {\n        file = this.normalizeFilename(file);\n        try {\n            this.module.FS.lookupPath(file);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    destroy(): any {\n        try {\n            this.module._libzip_destroy();\n        } catch (e) {\n            return e;\n        }\n    }\n\n    private normalizeFilename(file: string): string {\n        file = file.replace(new RegExp(\"^[a-zA-z]+:\"), \"\").replace(new RegExp(\"\\\\\\\\\", \"g\"), \"/\");\n        while (file[0] === \"/\") {\n            file = file.substr(1);\n        }\n        return file;\n    }\n\n    private createPath(parts: string[], begin: number, end: number) {\n        let path = \".\";\n        for (let i = begin; i < end; ++i) {\n            const part = parts[i].trim();\n            if (part.length === 0) {\n                continue;\n            }\n\n            this.module.FS.createPath(path, part, true, true);\n            path = path + \"/\" + part;\n        }\n\n        return path;\n    }\n\n    private chdirToHome() {\n        this.module.FS.chdir(this.home);\n    }\n\n    private chdir(path: string) {\n        this.module.FS.chdir(this.home + \"/\" + path);\n    }\n\n    public async zipAddFile(archive: string, file: string) {\n        const Module = this.module;\n        const archiveLength = Module[\"lengthBytesUTF8\"](archive) + 1;\n        const archiveBuffer = Module[\"_malloc\"](archiveLength);\n        Module.stringToUTF8(archive, archiveBuffer, archiveLength);\n\n        const fileLength = Module[\"lengthBytesUTF8\"](file) + 1;\n        const fileBuffer = Module[\"_malloc\"](fileLength);\n        Module.stringToUTF8(file, fileBuffer, fileLength);\n\n        const ret = this.module._zipfile_add(archiveBuffer, fileBuffer, fileBuffer);\n\n        Module[\"_free\"](archiveBuffer);\n        Module[\"_free\"](fileBuffer);\n\n        if (ret !== 0) {\n            throw new Error(\"Unable to add \" + file + \" into \" + archive);\n        }\n    }\n}\n","import { ServerMessage, MessageHandler } from \"./protocol\";\n\ninterface DelayedMessage {\n    name: ServerMessage,\n    props: {[key: string]: any},\n}\n\nexport class MessagesQueue {\n    private messages: DelayedMessage[] = [];\n    public handler(name: ServerMessage, props: {[key: string]: any}) {\n        this.messages.push({ name, props });\n    }\n    public sendTo(handler: MessageHandler) {\n        for (const next of this.messages) {\n            handler(next.name, next.props);\n        }\n\n        this.messages = [];\n    }\n}\n","import { CommandInterface, NetworkType, BackendOptions, DosConfig, InitFsEntry, InitFileEntry } from \"../emulators\";\nimport { CommandInterfaceEventsImpl } from \"../impl/ci-impl\";\n\nexport type ClientMessage =\n    \"wc-install\" |\n    \"wc-run\" |\n    \"wc-pack-fs-to-bundle\" |\n    \"wc-add-key\" |\n    \"wc-mouse-move\" |\n    \"wc-mouse-button\" |\n    \"wc-mouse-sync\" |\n    \"wc-exit\" |\n    \"wc-sync-sleep\" |\n    \"wc-pause\" |\n    \"wc-resume\" |\n    \"wc-mute\" |\n    \"wc-unmute\" |\n    \"wc-connect\" |\n    \"wc-disconnect\" |\n    \"wc-backend-event\" |\n    \"wc-asyncify-stats\" |\n    \"wc-fs-tree\" |\n    \"wc-fs-get-file\" |\n    \"wc-send-data-chunk\";\n\nexport type ServerMessage =\n    \"ws-extract-progress\" |\n    \"ws-ready\" |\n    \"ws-server-ready\" |\n    \"ws-frame-set-size\" |\n    \"ws-update-lines\" |\n    \"ws-log\" |\n    \"ws-warn\" |\n    \"ws-err\" |\n    \"ws-stdout\" |\n    \"ws-exit\" |\n    \"ws-persist\" |\n    \"ws-sound-init\" |\n    \"ws-sound-push\" |\n    \"ws-config\" |\n    \"ws-sync-sleep\" |\n    \"ws-connected\" |\n    \"ws-disconnected\" |\n    \"ws-asyncify-stats\" |\n    \"ws-fs-tree\" |\n    \"ws-send-data-chunk\";\n\nexport type MessageHandler = (name: ServerMessage, props: { [key: string]: any }) => void;\n\nexport interface TransportLayer {\n    sessionId: string;\n    sendMessageToServer(name: ClientMessage,\n        props: { [key: string]: any },\n        transfer?: ArrayBuffer[]): void;\n    initMessageHandler(handler: MessageHandler): void;\n    exit?: () => void;\n}\n\nexport interface FrameLine {\n    start: number;\n    heapu8: Uint8Array;\n}\n\nexport interface DataChunk {\n    type: \"ok\" | \"file\" | \"bundle\";\n    name: string;\n    data: ArrayBuffer | null;\n}\n\nexport interface AsyncifyStats {\n    messageSent: number,\n    messageReceived: number,\n    messageFrame: number,\n    messageSound: number,\n    nonSkippableSleepCount: number,\n    sleepCount: number,\n    sleepTime: number,\n    cycles: number,\n    netSent: number,\n    netRecv: number,\n    driveSent: number,\n    driveRecv: number,\n    driveRecvTime: number,\n    driveCacheHit: number,\n    driveCacheMiss: number,\n    driveCacheUsed: number,\n}\n\nexport interface FsNode {\n    name: string,\n    size: number | null,\n    nodes: FsNode[] | null,\n}\n\nexport class CommandInterfaceOverTransportLayer implements CommandInterface {\n    private startedAt = Date.now();\n    private frameWidth = 0;\n    private frameHeight = 0;\n    private rgb: Uint8Array | null = null;\n    private rgba: Uint8Array | null = null;\n    private freq = 0;\n    private utf8Decoder = new TextDecoder();\n\n    private init?: InitFsEntry[];\n    private transport: TransportLayer;\n    private ready: (err: Error | null) => void;\n\n    private persistPromise?: Promise<Uint8Array | null>;\n    private persistResolve?: (bundle: Uint8Array | null) => void;\n\n    private exitPromise?: Promise<void>;\n    private exitResolve?: () => void;\n\n    private eventsImpl = new CommandInterfaceEventsImpl();\n\n    private keyMatrix: { [keyCode: number]: boolean } = {};\n\n    private configPromise: Promise<DosConfig>;\n    private configResolve: (config: DosConfig) => void = () => {/**/};\n    private panicMessages: string[] = [];\n\n    private connectPromise: Promise<void> | null = null;\n    private connectResolve: () => void = () => {/**/};\n    private connectReject: () => void = () => {/**/};\n\n    private disconnectPromise: Promise<void> | null = null;\n    private disconnectResolve: () => void = () => {/**/};\n\n    private asyncifyStatsPromise: Promise<AsyncifyStats> | null = null;\n    private asyncifyStatsResolve: (stats: AsyncifyStats) => void = () => {/**/};\n\n    private fsTreePromise: Promise<FsNode> | null = null;\n    private fsTreeResolve: (fsRoot: FsNode) => void = () => {/**/};\n\n    private fsGetFilePromise: { [name: string]: Promise<Uint8Array> } = {};\n    private fsGetFileResolve: { [name: string]: (file: Uint8Array) => void } = {};\n    private fsGetFileParts: { [name: string]: Uint8Array[] } = {};\n\n    private dataChunkPromise: { [name: string]: Promise<void> } = {};\n    private dataChunkResolve: { [name: string]: () => void } = {};\n\n    public options: BackendOptions;\n\n    constructor(init: InitFsEntry[],\n        transport: TransportLayer,\n        ready: (err: Error | null) => void,\n        options: BackendOptions) {\n        this.options = options;\n        this.init = init;\n        this.transport = transport;\n        this.ready = ready;\n        this.configPromise = new Promise<DosConfig>((resolve) => this.configResolve = resolve);\n        this.transport.initMessageHandler(this.onServerMessage.bind(this));\n    }\n\n    private sendClientMessage(name: ClientMessage, props?: { [key: string]: any }, transfer?: [ArrayBuffer]) {\n        props = props || {};\n        props.sessionId = props.sessionId || this.transport.sessionId;\n        this.transport.sendMessageToServer(name, props, transfer);\n    }\n\n    private onServerMessage(name: ServerMessage, props: { [key: string]: any }) {\n        if (name === undefined || name.length < 3 ||\n            name[0] !== \"w\" || name[1] !== \"s\" || name[2] !== \"-\") {\n            return;\n        }\n\n        if (props === undefined || props.sessionId !== this.transport.sessionId) {\n            return;\n        }\n\n        switch (name) {\n            case \"ws-ready\": {\n                const sendBundles = async () => {\n                    if (!this.init || this.init.length === 0) {\n                        return;\n                    }\n\n                    const encoder = new TextEncoder();\n                    const sendData = async (type: \"file\" | \"bundle\", name: string, contents: Uint8Array) => {\n                        await this.sendDataChunk({\n                            type,\n                            name,\n                            data: contents.buffer,\n                        });\n\n                        await this.sendDataChunk({\n                            type,\n                            name,\n                            data: null,\n                        });\n                    };\n\n                    let bundleIndex = 0;\n                    for (const next of this.init) {\n                        if (ArrayBuffer.isView(next)) {\n                            await sendData(\"bundle\", bundleIndex + \"\", next);\n                            bundleIndex++;\n                        } else if (typeof next === \"string\") {\n                            await sendData(\"file\", \".jsdos/dosbox.conf\", encoder.encode(next));\n                        } else {\n                            const fileEntry = next as InitFileEntry;\n                            const dosConfig = next as DosConfig;\n\n                            if (dosConfig.jsdosConf.version !== undefined) {\n                                await sendData(\"file\", \".jsdos/dosbox.conf\",\n                                    encoder.encode(dosConfig.dosboxConf));\n                                await sendData(\"file\", \".jsdos/jsdos.json\",\n                                    encoder.encode(JSON.stringify(dosConfig.jsdosConf, null, 2)));\n                            } else if (fileEntry.path !== undefined) {\n                                await sendData(\"file\", fileEntry.path, fileEntry.contents);\n                            }\n                        }\n                    }\n                };\n\n                sendBundles()\n                    .then(() => {\n                        this.sendClientMessage(\"wc-run\", { token: this.options.token });\n                    })\n                    .catch((e) => {\n                        this.onErr(\"panic\", \"Can't send bundles to backend: \" + e.message);\n                        console.error(e);\n                    })\n                    .finally(() => {\n                        delete this.init;\n                    });\n            } break;\n            case \"ws-server-ready\": {\n                if (this.panicMessages.length > 0) {\n                    if (this.transport.exit !== undefined) {\n                        this.transport.exit();\n                    }\n                    this.ready(new Error(JSON.stringify(this.panicMessages)));\n                } else {\n                    this.ready(null);\n                }\n                delete (this as any).ready;\n            } break;\n            case \"ws-frame-set-size\": {\n                this.onFrameSize(props.width, props.height);\n            } break;\n            case \"ws-update-lines\": {\n                this.onFrameLines(props.lines, props.rgba);\n            } break;\n            case \"ws-exit\": {\n                this.onExit();\n            } break;\n            case \"ws-log\": {\n                // eslint-disable-next-line\n                this.onLog(props.tag, props.message);\n            } break;\n            case \"ws-warn\": {\n                // eslint-disable-next-line\n                this.onWarn(props.tag, props.message);\n            } break;\n            case \"ws-err\": {\n                // eslint-disable-next-line\n                this.onErr(props.tag, props.message);\n            } break;\n            case \"ws-stdout\": {\n                this.onStdout(props.message);\n            } break;\n            case \"ws-persist\": {\n                this.onPersist(props.bundle);\n            } break;\n            case \"ws-sound-init\": {\n                this.onSoundInit(props.freq);\n            } break;\n            case \"ws-sound-push\": {\n                this.onSoundPush(props.samples);\n            } break;\n            case \"ws-config\": {\n                this.onConfig({\n                    dosboxConf: this.utf8Decoder.decode(props.dosboxConf),\n                    jsdosConf: JSON.parse(props.jsdosConf),\n                });\n            } break;\n            case \"ws-sync-sleep\": {\n                this.sendClientMessage(\"wc-sync-sleep\", props);\n            } break;\n            case \"ws-connected\": {\n                this.connectResolve();\n                this.connectPromise = null;\n                this.connectResolve = () => {/**/};\n                this.connectReject = () => {/**/};\n                this.eventsImpl.fireNetworkConnected(props.networkType, props.address);\n            } break;\n            case \"ws-disconnected\": {\n                if (this.connectPromise !== null) {\n                    this.connectReject();\n                    this.connectPromise = null;\n                    this.connectResolve = () => {/**/};\n                    this.connectReject = () => {/**/};\n                } else {\n                    this.disconnectResolve();\n                    this.disconnectPromise = null;\n                    this.disconnectResolve = () => {/**/};\n                }\n                this.eventsImpl.fireNetworkDisconnected(props.networkType);\n            } break;\n            case \"ws-extract-progress\": {\n                if (this.options.onExtractProgress) {\n                    this.options.onExtractProgress(props.index, props.file, props.extracted, props.count);\n                }\n            } break;\n            case \"ws-asyncify-stats\": {\n                this.asyncifyStatsResolve(props as AsyncifyStats);\n                this.asyncifyStatsResolve = () => {/**/};\n                this.asyncifyStatsPromise = null;\n            } break;\n            case \"ws-fs-tree\": {\n                this.fsTreeResolve(props.fsTree as FsNode);\n                this.fsTreeResolve = () => {/**/};\n                this.fsTreePromise = null;\n            } break;\n            case \"ws-send-data-chunk\": {\n                const chunk: DataChunk = props.chunk;\n                const key = this.dataChunkKey(chunk);\n                if (chunk.type === \"ok\") {\n                    if (this.dataChunkPromise[key] !== undefined) {\n                        this.dataChunkResolve[key]();\n                        delete this.dataChunkPromise[key];\n                        delete this.dataChunkResolve[key];\n                    }\n                } else if (chunk.type === \"file\") {\n                    if (chunk.data === null) {\n                        const file = this.mergeChunks(this.fsGetFileParts[chunk.name]);\n                        this.fsGetFileResolve[chunk.name](file);\n                        delete this.fsGetFilePromise[chunk.name];\n                        delete this.fsGetFileResolve[chunk.name];\n                    } else {\n                        this.fsGetFileParts[chunk.name].push(new Uint8Array(chunk.data));\n                    }\n                } else {\n                    console.log(\"Unknown chunk type:\", chunk.type);\n                }\n            } break;\n            default: {\n                // eslint-disable-next-line\n                console.log(\"Unknown server message (ws):\", name);\n            } break;\n        }\n    }\n\n    private onConfig(config: DosConfig) {\n        this.configResolve(config);\n    }\n\n    private onFrameSize(width: number, height: number) {\n        if (this.frameWidth === width && this.frameHeight === height) {\n            return;\n        }\n\n        this.frameWidth = width;\n        this.frameHeight = height;\n        this.rgb = new Uint8Array(width * height * 3);\n        this.eventsImpl.fireFrameSize(width, height);\n    }\n\n    private onFrameLines(lines: FrameLine[], rgbaPtr: number) {\n        for (const line of (lines as FrameLine[])) {\n            this.rgb!.set(line.heapu8, line.start * this.frameWidth * 3);\n        }\n\n        this.eventsImpl.fireFrame(this.rgb, this.rgba);\n    }\n\n    private onSoundInit(freq: number) {\n        this.freq = freq;\n    }\n\n    private onSoundPush(samples: Float32Array) {\n        this.eventsImpl.fireSoundPush(samples);\n    }\n\n    private onLog(tag: string, message: string) {\n        this.eventsImpl.fireMessage(\"log\", \"[\" + tag + \"]\" + message);\n    }\n\n    private onWarn(tag: string, message: string) {\n        this.eventsImpl.fireMessage(\"warn\", \"[\" + tag + \"]\" + message);\n    }\n\n    private onErr(tag: string, message: string) {\n        if (tag === \"panic\") {\n            this.panicMessages.push(message);\n            console.error(\"[\" + tag + \"]\" + message);\n        }\n        this.eventsImpl.fireMessage(\"error\", \"[\" + tag + \"]\" + message);\n    }\n\n    private onStdout(message: string) {\n        this.eventsImpl.fireStdout(message);\n    }\n\n    public config() {\n        return this.configPromise;\n    }\n\n    public width() {\n        return this.frameWidth;\n    }\n\n    public height() {\n        return this.frameHeight;\n    }\n\n    public soundFrequency() {\n        return this.freq;\n    }\n\n    public screenshot(): Promise<ImageData> {\n        if (this.rgb !== null || this.rgba !== null) {\n            const rgba = new Uint8ClampedArray(this.frameWidth * this.frameHeight * 4);\n            const frame = (this.rgb !== null ? this.rgb : this.rgba) as Uint8Array;\n\n            let frameOffset = 0;\n            let rgbaOffset = 0;\n\n            while (rgbaOffset < rgba.length) {\n                rgba[rgbaOffset++] = frame[frameOffset++];\n                rgba[rgbaOffset++] = frame[frameOffset++];\n                rgba[rgbaOffset++] = frame[frameOffset++];\n                rgba[rgbaOffset++] = 255;\n\n                if (frame.length === rgba.length) {\n                    frameOffset++;\n                }\n            }\n\n            return Promise.resolve(new ImageData(rgba, this.frameWidth, this.frameHeight));\n        } else {\n            return Promise.reject(new Error(\"No frame received\"));\n        }\n    }\n\n    public simulateKeyPress(...keyCodes: number[]) {\n        const timeMs = Date.now() - this.startedAt;\n        keyCodes.forEach((keyCode) => this.addKey(keyCode, true, timeMs));\n        keyCodes.forEach((keyCode) => this.addKey(keyCode, false, timeMs + 16));\n    }\n\n    public sendKeyEvent(keyCode: number, pressed: boolean) {\n        this.addKey(keyCode, pressed, Date.now() - this.startedAt);\n    }\n\n    // public for test\n    public addKey(keyCode: number, pressed: boolean, timeMs: number) {\n        const keyPressed = this.keyMatrix[keyCode] === true;\n        if (keyPressed === pressed) {\n            return;\n        }\n        this.keyMatrix[keyCode] = pressed;\n        this.sendClientMessage(\"wc-add-key\", { key: keyCode, pressed, timeMs });\n    }\n\n    public sendMouseMotion(x: number, y: number) {\n        this.sendClientMessage(\"wc-mouse-move\", { x, y, relative: false, timeMs: Date.now() - this.startedAt });\n    }\n\n    public sendMouseRelativeMotion(x: number, y: number) {\n        this.sendClientMessage(\"wc-mouse-move\", { x, y, relative: true, timeMs: Date.now() - this.startedAt });\n    }\n\n    public sendMouseButton(button: number, pressed: boolean) {\n        this.sendClientMessage(\"wc-mouse-button\", { button, pressed, timeMs: Date.now() - this.startedAt });\n    }\n\n    public sendMouseSync() {\n        this.sendClientMessage(\"wc-mouse-sync\", { timeMs: Date.now() - this.startedAt });\n    }\n\n    public sendBackendEvent(payload: any) {\n        this.sendClientMessage(\"wc-backend-event\", { json: JSON.stringify(payload) });\n    }\n\n\n    public persist(onlyChanges?: boolean): Promise<Uint8Array | null> {\n        if (this.persistPromise !== undefined) {\n            return this.persistPromise;\n        }\n\n\n        const persistPromise = new Promise<Uint8Array | null>((resolve) => {\n            this.persistResolve = resolve;\n        });\n        this.persistPromise = persistPromise;\n        this.sendClientMessage(\"wc-pack-fs-to-bundle\", {\n            onlyChanges: onlyChanges !== false,\n        });\n\n        return persistPromise;\n    }\n\n    private onPersist(bundle: Uint8Array) {\n        if (this.persistResolve) {\n            this.persistResolve(bundle);\n            delete this.persistPromise;\n            delete this.persistResolve;\n        }\n    }\n\n    public pause() {\n        this.sendClientMessage(\"wc-pause\");\n    }\n\n    public resume() {\n        this.sendClientMessage(\"wc-resume\");\n    }\n\n    public mute() {\n        this.sendClientMessage(\"wc-mute\");\n    }\n\n    public unmute() {\n        this.sendClientMessage(\"wc-unmute\");\n    }\n\n    public exit(): Promise<void> {\n        if (this.exitPromise !== undefined) {\n            return this.exitPromise;\n        }\n        this.exitPromise = new Promise<void>((resolve) => this.exitResolve = resolve);\n        this.exitPromise.then(() => {\n            this.events().fireExit();\n        });\n\n        this.resume();\n        this.sendClientMessage(\"wc-exit\");\n\n        return this.exitPromise;\n    }\n\n    private onExit() {\n        if (this.transport.exit !== undefined) {\n            this.transport.exit();\n        }\n        if (this.exitResolve) {\n            this.exitResolve();\n            delete this.exitPromise;\n            delete this.exitResolve;\n        }\n    }\n\n    public events() {\n        return this.eventsImpl;\n    }\n\n    public networkConnect(networkType: NetworkType, address: string): Promise<void> {\n        if (this.connectPromise !== null || this.disconnectPromise !== null) {\n            return Promise.reject(new Error(\"Already prefoming connection or disconnection...\"));\n        }\n\n        this.connectPromise = new Promise<void>((resolve, reject) => {\n            if (!address.startsWith(\"wss://\") && !address.startsWith(\"ws://\")) {\n                address = (window.location.protocol === \"http:\" ? \"ws://\" : \"wss://\") + address;\n            }\n\n            this.connectResolve = resolve;\n            this.connectReject = reject;\n            this.sendClientMessage(\"wc-connect\", {\n                networkType,\n                address,\n            });\n        });\n        return this.connectPromise;\n    }\n\n    public networkDisconnect(networkType: NetworkType): Promise<void> {\n        if (this.connectPromise !== null || this.disconnectPromise !== null) {\n            return Promise.reject(new Error(\"Already prefoming connection or disconnection...\"));\n        }\n\n        this.disconnectPromise = new Promise<void>((resolve) => {\n            this.disconnectResolve = resolve;\n\n            this.sendClientMessage(\"wc-disconnect\", {\n                networkType,\n            });\n        });\n        return this.disconnectPromise;\n    }\n\n    public asyncifyStats(): Promise<AsyncifyStats> {\n        if (this.asyncifyStatsPromise !== null) {\n            return this.asyncifyStatsPromise;\n        }\n\n        const promise = new Promise<AsyncifyStats>((resolve) => {\n            this.asyncifyStatsResolve = resolve;\n        });\n\n        this.asyncifyStatsPromise = promise;\n        this.sendClientMessage(\"wc-asyncify-stats\", {});\n\n        return promise;\n    }\n\n    public fsTree(): Promise<FsNode> {\n        if (this.fsTreePromise !== null) {\n            return this.fsTreePromise;\n        }\n\n        const promise = new Promise<FsNode>((resolve) => {\n            this.fsTreeResolve = resolve;\n        });\n        this.fsTreePromise = promise;\n        this.sendClientMessage(\"wc-fs-tree\");\n\n        return promise;\n    }\n\n    async fsReadFile(file: string): Promise<Uint8Array> {\n        if (this.fsGetFilePromise[file] !== undefined) {\n            throw new Error(\"fsGetFile should not be called twice for same file\");\n        }\n\n        const promise = new Promise<Uint8Array>((resolve) => {\n            this.fsGetFileResolve[file] = resolve;\n        });\n        this.fsGetFilePromise[file] = promise;\n        this.fsGetFileParts[file] = [];\n        this.sendClientMessage(\"wc-fs-get-file\", {\n            file,\n        });\n\n        return promise;\n    }\n\n    async fsWriteFile(file: string, contents: ReadableStream<Uint8Array> | Uint8Array): Promise<void> {\n        if (ArrayBuffer.isView(contents)) {\n            await this.sendDataChunk({\n                type: \"file\",\n                name: file,\n                data: contents.buffer,\n            });\n        } else {\n            const reader = contents.getReader();\n            while (true) {\n                const result = await reader.read();\n                if (result.value !== undefined) {\n                    await this.sendDataChunk({\n                        type: \"file\",\n                        name: file,\n                        data: result.value.buffer,\n                    });\n                }\n                if (result.done) {\n                    break;\n                }\n            }\n        }\n\n        await this.sendDataChunk({\n            type: \"file\",\n            name: file,\n            data: null,\n        });\n    }\n\n    async fsDeleteFile(file: string): Promise<void> {\n        throw new Error(\"not implemented\");\n    }\n\n    private async sendDataChunk(chunk: DataChunk): Promise<void> {\n        const key = this.dataChunkKey(chunk);\n        if (this.dataChunkPromise[key] !== undefined) {\n            throw new Error(\"sendDataChunk should be accepted before sending new one\");\n        }\n        const promise = new Promise<void>((resolve) => {\n            this.dataChunkResolve[key] = resolve;\n        });\n        this.dataChunkPromise[key] = promise;\n        this.sendClientMessage(\"wc-send-data-chunk\", {\n            chunk,\n        }, chunk.data === null ? undefined : [chunk.data]);\n        return promise;\n    }\n\n    private dataChunkKey(chunk: DataChunk) {\n        return chunk.name;\n    }\n\n    private mergeChunks(parts: Uint8Array[]): Uint8Array {\n        if (parts.length === 1) {\n            return parts[0];\n        }\n\n        let length = 0;\n        for (const next of parts) {\n            length += next.byteLength;\n        }\n        const merged = new Uint8Array(length);\n        length = 0;\n        for (const next of parts) {\n            merged.set(next, length);\n            length += next.byteLength;\n        }\n        return merged;\n    }\n}\n"]}